
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS groups;
DROP TABLE IF EXISTS responses;
DROP TABLE IF EXISTS tickets;
DROP TABLE IF EXISTS tags;
DROP TABLE IF EXISTS relation_groups_users;
DROP TABLE IF EXISTS relation_reponses_tickets;
DROP TABLE IF EXISTS relation_tags_groups;
DROP TABLE IF EXISTS relation_users_tags;

CREATE TABLE users
(
	idUser VARCHAR(255) PRIMARY KEY NOT NULL,
	firstname VARCHAR(40) NOT NULL,
	lastname VARCHAR(40) NOT NULL,
	password VARCHAR(60) NOT NULL,
	image VARCHAR(500),
	email VARCHAR(50) NOT NULL
);

CREATE TABLE groups
(
    idGroup INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	name VARCHAR(40) NOT NULL,
	permission VARCHAR(5) NOT NULL
);


CREATE TABLE responses
(
	idResponse VARCHAR(500) PRIMARY KEY NOT NULL,
	idUser VARCHAR(500) NOT NULL,
	content VARCHAR(200) NOT NULL,
	file BLOB,
	mailingDate DATE NOT NULL,
	FOREIGN KEY(idUser) REFERENCES users(idUser)
);


CREATE TABLE tickets
(
	idTicket VARCHAR(500) PRIMARY KEY NOT NULL,
	title VARCHAR(30) NOT NULL,
	content VARCHAR(200) NOT NULL,
	idTagTicket INTEGER NOT NULL,
	file BLOB,
	status INTEGER NOT NULL,
	dates DATE NOT NULL,
	idUser VARCHAR(500) NOT NULL,
	FOREIGN KEY(idUser) REFERENCES users(idUser),
	FOREIGN KEY(idTagTicket) REFERENCES tags(idTag)
);




CREATE TABLE tags
(
	idTag INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	name VARCHAR(30) NOT NULL
);

	
CREATE TABLE relation_groups_users
(
	idRelationGroupUser INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	userID INTEGER NOT NULL,
	groupID INTEGER NOT NULL,
	FOREIGN KEY(idRelationGroupUser) REFERENCES users(idUser)
);



CREATE TABLE relation_reponses_tickets
(
	id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	idResponse VARCHAR(500) NOT NULL,
	idTicket VARCHAR(500)NOT NULL,
	FOREIGN KEY(idTicket) REFERENCES tickets(idTicket)
	FOREIGN KEY(idResponse) REFERENCES responses(idResponse)
);	



CREATE TABLE relation_tags_groups
(
	idRelationTagGroup INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	idTag INTEGER NOT NULL,
	idGroup INTEGER NOT NULL,
	FOREIGN KEY(idTag) REFERENCES tags(idTag),
	FOREIGN KEY(idGroup) REFERENCES groups(idGroup)
);
